from __future__ import division
import os
import cartopy.crs as ccrs
import cartopy.io.shapereader as shpreader
import matplotlib.pyplot as plt


#Load country codes for map plotting
def readCodeDic(codeFile):
    codeDic = {}
    for line in open(codeFile):
        line2 = line.replace("\r","").rstrip("\n").split("\t")
        if len(line2) == 2:
            codeDic[line2[0]] = line2[1]
    return(codeDic)

#Load country based data
def loadCountryInfo(file1,codeDic):
    countryData = {}
    l = 0
    maxSpecs = 0
    for line in open(file1):
        l += 1
        line2 = line.replace("\r","").replace("?","").rstrip("\n").split("\t")
        if len(line2) > 2 and l > 1:
            count = codeDic.get(line2[0],"no data yet")
            countryData[count] = [int(line2[1]),float(line2[2]),float(line2[3]),float(line2[4])]
            if count == "no data yet":
                print(line2[0] + " no country code yet")
            if int(line2[1]) > maxSpecs:
                maxSpecs = int(line2[1])
    return(countryData,maxSpecs)

#Make maps for taxonomic groups
def makeMap(countryData,output,maxSpecs):
    #Define panel names
    levels = ["Number of species","BOLD public", "BOLD total", "Total"]

    #Load details of map
    shapename = 'admin_0_countries'
    countries_shp = shpreader.natural_earth(resolution='10m',category='cultural', name=shapename)

    #Load colourmap
    cmap = plt.get_cmap("plasma_r")

    #Make figure
    plt.figure(figsize=(20,14))
    for r in range(0,4):
        ax = plt.subplot(2,2,r+1,projection=ccrs.PlateCarree())
        for country in shpreader.Reader(countries_shp).records():
            code = country.attributes["ADM0_A3_US"]
            value = countryData.get(code,["NA","NA","NA","NA"])
            if value[1] == "NA":
                ax.add_geometries(country.geometry, ccrs.PlateCarree(),
                            lw=1,facecolor=(0.9,0.9,0.9),edgecolor=(0,0,0,1),alpha=1)
            else:
                if r == 0:
                    col = list(cmap(value[r]/maxSpecs))
                else:
                    col = list(cmap(value[r]))
                ax.add_geometries(country.geometry, ccrs.PlateCarree(),
                    lw=1,facecolor=col,edgecolor=(0,0,0,1),alpha=1)

        #Make lables
        if r == 0:
            sm = plt.cm.ScalarMappable(cmap=cmap,norm=plt.Normalize(0,maxSpecs))
        else:
            sm = plt.cm.ScalarMappable(cmap=cmap,norm=plt.Normalize(0,1))
        sm._A = []
        cb = plt.colorbar(sm)
        cb.ax.set_yticklabels(cb.ax.get_yticklabels(), fontsize=8)

        #Map size
        ax.set_extent([-25,52,30,70])
        ax.set_aspect('auto', adjustable="box")
        ax.set_title(levels[r],fontsize=10)


    #Save
    plt.savefig(output)
    plt.savefig(output[:-3] + "pdf")
    plt.close()


#User defined variables
#Folder including country summary files generated by FM_make_result_statistics.py
inputFolder = "output"

#Name of output folder
outputFolder = "maps"

#Name of country code file
codeDicFile = "country_codes.txt"

#Prefix output
outputPrefix = "GapAnalysis"

#Do Analysis

#Test if output folder exists, otherwise create it
if not os.path.exists(outputFolder):
    os.makedirs(outputFolder)

#Load input files for different taxonomic groups
all_files = os.listdir(inputFolder)
all_files = [f for f in all_files if f.endswith("country.tsv")]

#Load country codes for map plotting
codeDic = readCodeDic(codeDicFile)

#For each taxonomic group, generate files
for file1 in all_files:
    #get basic information of the file
    name = file1.split("_")[1]
    version = file1.split("_")[2][1:]
    lim = file1.split("_")[3][3:]
    #make output name
    out = outputFolder + "/" + outputPrefix + "_" + name + "_v" + str(version) + "_lim" + str(lim) + ".svg"
    #load country-based information
    countryData,maxSpecs = loadCountryInfo(inputFolder + "/" + file1,codeDic)
    #generate map file
    makeMap(countryData,out,maxSpecs)
    print("map " + name + " for lim " + str(lim) + " finished")
